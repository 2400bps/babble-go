// Code generated by protoc-gen-go. DO NOT EDIT.
// source: grpc.proto

/*
Package grpc is a generated protocol buffer package.

It is generated from these files:
	grpc.proto

It has these top-level messages:
	RumorRequest
	RumorResponse
*/
package grpc

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc1 "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type RumorRequest struct {
	Signature []byte `protobuf:"bytes,1,opt,name=signature,proto3" json:"signature,omitempty"`
	Data      []byte `protobuf:"bytes,2,opt,name=data,proto3" json:"data,omitempty"`
	Nonce     uint64 `protobuf:"varint,3,opt,name=nonce" json:"nonce,omitempty"`
}

func (m *RumorRequest) Reset()                    { *m = RumorRequest{} }
func (m *RumorRequest) String() string            { return proto.CompactTextString(m) }
func (*RumorRequest) ProtoMessage()               {}
func (*RumorRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *RumorRequest) GetSignature() []byte {
	if m != nil {
		return m.Signature
	}
	return nil
}

func (m *RumorRequest) GetData() []byte {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *RumorRequest) GetNonce() uint64 {
	if m != nil {
		return m.Nonce
	}
	return 0
}

type RumorResponse struct {
}

func (m *RumorResponse) Reset()                    { *m = RumorResponse{} }
func (m *RumorResponse) String() string            { return proto.CompactTextString(m) }
func (*RumorResponse) ProtoMessage()               {}
func (*RumorResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func init() {
	proto.RegisterType((*RumorRequest)(nil), "grpc.RumorRequest")
	proto.RegisterType((*RumorResponse)(nil), "grpc.RumorResponse")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc1.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc1.SupportPackageIsVersion4

// Client API for GossipService service

type GossipServiceClient interface {
	Gossip(ctx context.Context, in *RumorRequest, opts ...grpc1.CallOption) (*RumorResponse, error)
}

type gossipServiceClient struct {
	cc *grpc1.ClientConn
}

func NewGossipServiceClient(cc *grpc1.ClientConn) GossipServiceClient {
	return &gossipServiceClient{cc}
}

func (c *gossipServiceClient) Gossip(ctx context.Context, in *RumorRequest, opts ...grpc1.CallOption) (*RumorResponse, error) {
	out := new(RumorResponse)
	err := grpc1.Invoke(ctx, "/grpc.GossipService/Gossip", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for GossipService service

type GossipServiceServer interface {
	Gossip(context.Context, *RumorRequest) (*RumorResponse, error)
}

func RegisterGossipServiceServer(s *grpc1.Server, srv GossipServiceServer) {
	s.RegisterService(&_GossipService_serviceDesc, srv)
}

func _GossipService_Gossip_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc1.UnaryServerInterceptor) (interface{}, error) {
	in := new(RumorRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GossipServiceServer).Gossip(ctx, in)
	}
	info := &grpc1.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.GossipService/Gossip",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GossipServiceServer).Gossip(ctx, req.(*RumorRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _GossipService_serviceDesc = grpc1.ServiceDesc{
	ServiceName: "grpc.GossipService",
	HandlerType: (*GossipServiceServer)(nil),
	Methods: []grpc1.MethodDesc{
		{
			MethodName: "Gossip",
			Handler:    _GossipService_Gossip_Handler,
		},
	},
	Streams:  []grpc1.StreamDesc{},
	Metadata: "grpc.proto",
}

func init() { proto.RegisterFile("grpc.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 163 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xe2, 0x4a, 0x2f, 0x2a, 0x48,
	0xd6, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0x62, 0x01, 0xb1, 0x95, 0xc2, 0xb8, 0x78, 0x82, 0x4a,
	0x73, 0xf3, 0x8b, 0x82, 0x52, 0x0b, 0x4b, 0x53, 0x8b, 0x4b, 0x84, 0x64, 0xb8, 0x38, 0x8b, 0x33,
	0xd3, 0xf3, 0x12, 0x4b, 0x4a, 0x8b, 0x52, 0x25, 0x18, 0x15, 0x18, 0x35, 0x78, 0x82, 0x10, 0x02,
	0x42, 0x42, 0x5c, 0x2c, 0x29, 0x89, 0x25, 0x89, 0x12, 0x4c, 0x60, 0x09, 0x30, 0x5b, 0x48, 0x84,
	0x8b, 0x35, 0x2f, 0x3f, 0x2f, 0x39, 0x55, 0x82, 0x59, 0x81, 0x51, 0x83, 0x25, 0x08, 0xc2, 0x51,
	0xe2, 0xe7, 0xe2, 0x85, 0x9a, 0x5b, 0x5c, 0x90, 0x9f, 0x57, 0x9c, 0x6a, 0xe4, 0xc4, 0xc5, 0xeb,
	0x9e, 0x5f, 0x5c, 0x9c, 0x59, 0x10, 0x9c, 0x5a, 0x54, 0x96, 0x99, 0x9c, 0x2a, 0x64, 0xc8, 0xc5,
	0x06, 0x11, 0x10, 0x12, 0xd2, 0x03, 0x3b, 0x0b, 0xd9, 0x1d, 0x52, 0xc2, 0x28, 0x62, 0x10, 0x33,
	0x92, 0xd8, 0xc0, 0x2e, 0x37, 0x06, 0x04, 0x00, 0x00, 0xff, 0xff, 0x2f, 0x04, 0x2e, 0xd2, 0xc7,
	0x00, 0x00, 0x00,
}
